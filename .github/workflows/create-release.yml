name: Create Release

concurrency:
  group: ci-${{ github.repository }}-release
  cancel-in-progress: false

on:
  push:
    branches:
      - "main"

env:
  IMAGE_NAME: "${{ github.repository_owner }}/excalidraw"

jobs:
  create_release:
    uses: fullstack-devops/actions/.github/workflows/create-release.yml@main
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: get excalidraw version
        id: excalidraw_version
        run: echo "::set-output name=version::$(cat ./APP_VERSION)"

      - name: Check out excalidraw
        uses: actions/checkout@v3
        with:
          repository: "excalidraw/excalidraw"
          path: excalidraw
          ref: v${{ steps.excalidraw_version.outputs.version }}

      - name: install packages
        working-directory: excalidraw
        run: yarn --ignore-optional
      - name: build application
        working-directory: excalidraw
        run: yarn build

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to Red Hat Quay
        uses: docker/login-action@v1
        with:
          registry: quay.io
          username: ${{ secrets.RH_QUAY_USERNAME }}
          password: ${{ secrets.RH_QUAY_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build excalidraw
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          build-args: APP_VERSION=${{ steps.excalidraw_version.outputs.version }}
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}
            ghcr.io/${{ env.IMAGE_NAME }}:latest
            quay.io/${{ env.IMAGE_NAME }}:${{needs.create_release.outputs.version}}
            quay.io/${{ env.IMAGE_NAME }}:latest

  publish_release:
    runs-on: ubuntu-latest
    needs: [create_release, build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup awesome-ci
        uses: fullstack-devops/awesome-ci-action@main

      - name: Publish Release
        run: awesome-ci release publish -releaseid "$ACI_RELEASE_ID"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACI_RELEASE_ID: ${{ needs.create_release.outputs.releaseid }}

      - name: update helm charts appVersion
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.HELM_REPO_TOKEN }}
          repository: fullstack-devops/helm-charts
          event-type: update_chart_version
          client-payload: '{"chart": "excalidraw", "version": "${{ needs.create_release.outputs.version }}"}'
